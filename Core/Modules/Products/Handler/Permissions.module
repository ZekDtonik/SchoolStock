<?php
/**
 * Created by MarxMedia.
 * Author: Kevin Marques
 * Date: 23/08/2018 - 08:47
 * Grh : Permitions.module
 */

namespace Modules\Application\Products\Manager;


use Abstracts\Component;
use Exceptions\PermissionException;
use Modules\Access;
use Modules\CNN;
use Modules\System;

class Permissions
{
    private $sql;
    private $crdid;
    private $class;
    private $assync;

    public function setClass($class) { $this->class = $class; }
    public function assync($assync) { $this->assync = $assync; }
    private function getAssync() { return $this->assync; }
    private function getClass() { return $this->class; }
    private function getSql() { return $this->sql; }
    public function __construct() {
        $this->sql = CNN::getSql();
        !defined("_AUTHID_") ? define("_AUTHID_",$_SESSION['authid']) : null;
        $this->crdid = _AUTHID_;

    }

    /***
     * @function manifest() - Recupera os modules que possuam
     * o MANIFEST.XML para observar as informações atribuidos
     * e se habilita mostrar a tabela de permissoes na gerencia
     * de grupo de usuários.
     * @param  $class
     * @param null $type
     * @return bool
     * @throws PermissionException
     */
    public function permission($type = null){
        if(empty($type)){
            return false;
        }
        else{
            $chkuserStat = $this->getSql()->prepare("SELECT `status` FROM ".__USERS." WHERE authid=:authid");
            $chkuserStat->bindValue(":authid",$this->crdid,\PDO::PARAM_STR);
            $chkuserStat->execute();

            $chkLvl = $chkuserStat->fetch(\PDO::FETCH_ASSOC);
            if($chkLvl['status'] == 4){
                return true;
            }
            else{
                $credentials = $this->getSql()->prepare("SELECT * FROM see_permissions WHERE authid=:authid");
                $credentials->bindValue(":authid",$this->crdid);
                $credentials->execute();

                $bindFetch = $credentials->fetch(\PDO::FETCH_ASSOC);
                $perms = $bindFetch['permissions'];
                $creds = json_decode($perms,true);
                //---------------------------------------
                $msg ='você não tem permissão para acessar este módulo.';

                if(!isset($creds[$this->getClass()])){
                    if($this->getAssync()){
                        System::message('error',_tr('access_denied'),_tr('you_dont_have_permission_to_do_this'));
                        exit(0);
                    }
                    else{
                        throw new PermissionException($msg);
                    }

                }
                else{
                    if(!isset($creds[$this->getClass()][$type])){
                        if($this->getAssync()){
                            System::message('error',_tr('access_denied'),_tr('you_dont_have_permission_to_do_this'));
                            exit(0);
                        }
                        else{
                            if($this->getAssync()){
                                System::message('error',_tr('access_denied'),_tr('you_dont_have_permission_to_do_this'));
                                exit(0);
                            }
                            else{
                                throw new PermissionException($msg);
                            }
                        }
                    }
                    else{
                        $getActualPerms = $creds[$this->getClass()][$type];
                        if($getActualPerms == 1){
                            return true;
                        }
                    }

                }
            }
        }
    }
}